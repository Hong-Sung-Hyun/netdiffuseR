% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netdiffusr_classes.R
\name{plot_threshold}
\alias{plot_threshold}
\alias{plot_threshold.array}
\alias{plot_threshold.list}
\title{Threshold level through time}
\usage{
plot_threshold(graph, ...)

\method{plot_threshold}{array}(graph, ...)

\method{plot_threshold}{list}(graph, exposure, toa, times.recode = TRUE,
  undirected = TRUE, main = "Time of Adoption by Network Threshold",
  xlab = "Time", ylab = "Threshold", vertex.cex = NA,
  vertex.col = "blue", vertex.label = NULL, vertex.lab.pos = 3,
  edge.width = 2, edge.col = "gray", arrow.length = 0.2,
  include.grid = TRUE, bty = "n", ...)
}
\arguments{
\item{graph}{A dynamic graph (see \code{\link{netdiffuseR-graphs}}).}

\item{...}{Additional arguments passed to \code{plot} via \code{\link[sna:gplot]{gplot}}}

\item{exposure}{\eqn{n\times T}{n * T} matrix. Esposure to the innovation obtained from \code{\link{exposure}}}

\item{toa}{Integer vector of size \eqn{n}. Times of Adoption}

\item{times.recode}{Logical scalar. TRUE when time recoding must be done.}

\item{main}{Character. Title of the plot}

\item{xlab}{Character. x-axis label}

\item{ylab}{Character. y-axis label}

\item{vertex.cex}{Numeric vector of size \eqn{n}. Relative size of the vertices}

\item{vertex.col}{Either a vector of size \eqn{n} or a scalar indicating colors of the vertices}

\item{vertex.label}{Character vector of size \eqn{n}. Labels of the vertices}

\item{vertex.lab.pos}{Integer value to be passed to \code{\link{text}} via \code{pos}}

\item{edge.width}{Numeric. Width of the edges}

\item{edge.col}{Character. Color of the edges}

\item{arrow.length}{Numeric value to be passed to \code{\link{arrows}}}

\item{include.grid}{Logical. When TRUE, the grid of the graph is drawn}

\item{bty}{See \code{\link{par}}}
}
\description{
Draws a graph where the coordinates are given by time of adoption, x-axis,
and threshold level, y-axis.
}
\examples{

# Generating a random graph
set.seed(1234)
n <- 6
nper <- 5
graph <- rand_graph(n,nper, p=.3, undirected = FALSE)
toa <- sample(2000:(2000+nper-1), n, TRUE)
adopt <- toa_mat(toa)

# Computing exposure
expos <- exposure(graph, adopt$cumadopt, undirected = FALSE)

plot_threshold(graph, expos, toa)

# Calculating degree (for sizing the vertices)
indegree <- netdiffuseR::degree(graph, cmode="indegree")
indegree <- apply(indegree, 1, mean)
plot_threshold(graph, expos, toa, vertex.cex = indegree)

}
\seealso{
Use \code{\link{threshold}} to retrieve the corresponding threshold
obtained returned by \code{\link{exposure}}.

Other visualizations: \code{\link{plot_diffnet}},
  \code{\link{plot_infectsuscep}}
}
\keyword{hplot}

