% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{exposure}
\alias{exposure}
\title{Ego exposure}
\usage{
exposure(graph, cumadopt, attrs = NULL, alt.graph = NULL,
  outgoing = getOption("diffnet.outgoing", TRUE),
  valued = getOption("diffnet.valued", FALSE), normalized = TRUE, ...)
}
\arguments{
\item{graph}{A dynamic graph (see \code{\link{netdiffuseR-graphs}}).}

\item{cumadopt}{nxT matrix. Cumulative adoption matrix obtained from
\code{\link{toa_mat}}}

\item{attrs}{Either a character scalar (if \code{graph} is diffnet),
or a numeric matrix of size \eqn{n\times T}{n * T}. Weighting for each time, period (see details).}

\item{alt.graph}{Either a dynamic graph that should be used instead of \code{graph},
or \code{"se"} (see details).}

\item{outgoing}{Logical scalar. When \code{TRUE}, computed using outgoing ties.}

\item{valued}{Logical scalar. When \code{FALSE}, values of \code{graph} are set to one.}

\item{normalized}{Logical scalar. When \code{TRUE}, the exposure will be between zero
and one (see details).}

\item{...}{Further arguments passed to \code{\link{struct_equiv}} (only used when
\code{alt.graph="se"}).}
}
\value{
A matrix of size \eqn{n\times T}{n * T} with exposure for each node.
}
\description{
Calculates exposure to adoption over time via multiple different types of weight
matrices.  The basic  model is exposure to adoption by immediate neighbors
(outdegree) at the time period prior to egoâ€™s adoption. This exposure can also be
based on (1) incoming ties, (2) structural equivalence, (3) indirect ties, (4)
attribute weighted (5) network-metric weighted (e.g., central nodes have more
influence), and attribute-weighted (e.g., based on homophily or tie strength).
}
\details{
Exposure is calculated as follows:

\deqn{ %
E_t = \left(S_t \times \left[x_t \circ A_t\right]\right) / (S_t \times x_t) %
}{%
E(t) = (S(t) \%*\% [x(t) * A(t)]) / [S(t) \%*\% x(t)]
}

Where \eqn{S_t}{S(t)} is the graph in time \eqn{t}, \eqn{x_t}{x(t)} is an attribute
vector of size \eqn{n} at time \eqn{t}, \eqn{A_t}{A(t)} is the t-th column of
the cumulative adopters matrix (a vector of length \eqn{n} with \eqn{a_{ti}=1}{a(t,i)=1}
if \eqn{i} has adopted at or prior to \eqn{t}), \eqn{\circ}{*} is the kronecker
product (element-wise), and \eqn{\times}{\%*\%} is the matrix product.

By default the graph used for this calculation, \eqn{S}, is the social network. Alternatively,
in the case of \code{diffnet} objects, the user can provide an alternative
graph using \code{alt.graph}. An example of this would be using \eqn{1/SE},
the element-wise inverse of the structural equivalence matrix (see example below).
Furthermore, if \code{alt.graph="se"}, the inverse of the structural equivalence
is computed via \code{\link{struct_equiv}} and used instead of the provided
graph. Notice that when using a valued graph the option \code{valued} should
be equal to \code{TRUE}, this check is run automatically when running the
model using structural equivalence.

If the user does not specifies a particular weighting attribute in \code{attrs},
the function sets this as a matrix of ones. Otherwise the function will return
an attribute weighted exposure. When \code{graph} is of class \code{diffnet},
\code{attrs} can be a character scalar specifying the name of any of the graph's
attributes, both dynamic and static. See the examples section for a demonstration using
degree.

When \code{outgoing=FALSE}, \eqn{S} is replaced by its transposed, so in the
case of a social network exposure will be computed based on the incomming ties.

If \code{normalize=FALSE} then denominator, \eqn{S_t \times x_t}{S(t) \%*\% x(t)},
is not included. This can be useful when, for example, exposure needs to be
computed as a count instead of a proportion. A good example of this can be
found at the examples section of the function \code{\link{rdiffnet}}.
}
\examples{
# Calculating the exposure based on Structural Equivalence ------------------
set.seed(113132)
graph <- rdiffnet(100, 10)

SE <- lapply(struct_equiv(graph), "[[", "SE")
SE <- lapply(SE, function(x) 1/(x + 1e-15))

# Recall setting valued equal to TRUE!
expo_se <- exposure(graph, alt.graph=SE , valued=TRUE)

# These three lines are equivalent to
expo_se2 <- exposure(graph, alt.graph="se")

# Weighted Exposure using degree --------------------------------------------
eDE <- exposure(graph, attrs=dgr(graph))

# Which is equivalent to
graph[["deg"]] <- dgr(graph)
eDE2 <- exposure(graph, attrs="deg")

# Comparing using incomming edges -------------------------------------------
eIN <- exposure(graph, outgoing=FALSE)

}
\author{
Vega Yon, Dyal, Hayes & Valente
}
\references{
Burt, R. S. (1987). "Social Contagion and Innovation: Cohesion versus Structural
Equivalence". American Journal of Sociology, 92(6), 1287.
\url{http://doi.org/10.1086/228667}

Valente, T. W. (1995). "Network models of the diffusion of innovations"
 (2nd ed.). Cresskill N.J.: Hampton Press.
}
\seealso{
Other statistics: \code{\link{cumulative_adopt_count}},
  \code{\link{dgr}}, \code{\link{hazard_rate}},
  \code{\link{infection}}, \code{\link{moran}},
  \code{\link{struct_equiv}}, \code{\link{threshold}}
}
\keyword{univar}

