{
  "name": "Netdiffuser",
  "tagline": "netdiffuseR: Network Analysis for Diffusion of Innovations",
  "body": "netdiffuseR: Network Analysis for Diffusion of Innovations\r\n==========================================================\r\n\r\n[![Build Status](https://travis-ci.org/USCCANA/netdiffuseR.svg?branch=master)](https://travis-ci.org/USCCANA/netdiffuseR) [![Build status](https://ci.appveyor.com/api/projects/status/6u48wgl1lqak2jum?svg=true)](https://ci.appveyor.com/project/gvegayon/netdiffuser) [![codecov.io](https://codecov.io/github/USCCANA/netdiffuseR/coverage.svg?branch=master)](https://codecov.io/github/USCCANA/netdiffuseR?branch=master) [![](http://cranlogs.r-pkg.org/badges/netdiffuseR)](http://cran.rstudio.com/web/packages/netdiffuseR/index.html) [![CRAN\\_Status\\_Badge](http://www.r-pkg.org/badges/version/netdiffuseR)](http://cran.r-project.org/package=netdiffuseR) [![](http://cranlogs.r-pkg.org/badges/grand-total/netdiffuseR)](http://cran.rstudio.com/web/packages/netdiffuseR/index.html)\r\n\r\nThis package contains functions useful for analyzing network data for diffusion of innovations applications.\r\n\r\nThe package was developed as part of the paper Thomas W. Valente, Stephanie R. Dyal, Kar-Hai Chu, Heather Wipfli, Kayo Fujimoto, *Diffusion of innovations theory applied to global tobacco control treaty ratification*, Social Science & Medicine, Volume 145, November 2015, Pages 89-97, ISSN 0277-9536 (available [here](http://www.sciencedirect.com/science/article/pii/S027795361530143X))\r\n\r\nFrom the description:\r\n\r\n> Empirical statistical analysis, visualization and simulation of network models of the diffusion of innovations. The package implements algorithms for calculating network diffusion statistics such as transmission rate, hazard rates, exposure models, network threshold levels, infectiousness (contagion), and susceptibility. The package is inspired by work published in Valente, et al., (2015) <DOI:10.1016/j.socscimed.2015.10.001>; Valente (1995) <ISBN:9781881303213>, Myers (2000) <DOI:10.1086/303110>, Iyengar and others (2011) <DOI:10.1287/mksc.1100.0566>, Burt (1987) <DOI:10.1086/228667>; among others.\r\n\r\n**Acknowledgements**: netdiffuseR was created with the support of grant R01 CA157577 from the National Cancer Institute/National Institutes of Health.\r\n\r\nNews\r\n----\r\n\r\nChangelog can be view [here](NEWS.md).\r\n\r\n-   \\[2016-06-02\\] A video of the **netdiffuseR** workshop at SUNBELT 2016 is now online on [youtube](https://www.youtube.com/playlist?list=PLT-GgRN1lFI4coHDqkRJm3flDw9e1gg2P), and the workshop materials can be found [here](https://github.com/USCCANA/netdiffuseR/tree/master/doc/conferences/20160400_sunbelt2016/)\r\n-   \\[2016-04-11\\] **netdiffuseR** will be on [useR! 2016](http://user2016.org) on as a presentation and on [IC2S2 2016](http://www.kellogg.northwestern.edu/news-events/conference/ic2s2/2016.aspx) in the posters session.\r\n-   \\[2016-03-16\\] Next CRAN release scheduled for April 11th 2016 (after the workshop).\r\n-   \\[2016-02-18\\] **netdiffuseR** vers 1.16.2 is now on CRAN!\r\n-   \\[2016-02-18\\] We will be offering a workshop at the 2016 SUNBELT Conference (checkout the full list of workshops [here](http://insna.org/sunbelt2016/program/)).\r\n\r\nInstallation\r\n------------\r\n\r\n### CRAN version\r\n\r\nTo get the CRAN (stable) version of the package, simple type\r\n\r\n``` r\r\ninstall.packages(\"netdiffuseR\")\r\n```\r\n\r\n### Bleeding edge version\r\n\r\nIf you want the latest (unstable) version of **netdiffuseR**, using the `devtools` package, you can install `netdiffuseR` dev version as follows\r\n\r\n``` r\r\ndevtools::install_github('USCCANA/netdiffuseR', build_vignettes = TRUE)\r\n```\r\n\r\nYou can skip building vignettes by setting `build_vignettes = FALSE` (so it is not required).\r\n\r\nFor the case of OSX users, there seems to be a problem when installing packages depending on `Rcpp`. This issue, developed [here](https://github.com/USCCANA/netdiffuseR/issues/3), can be solved by open the terminal and typing the following\r\n\r\n``` sh\r\ncurl -O http://r.research.att.com/libs/gfortran-4.8.2-darwin13.tar.bz2\r\nsudo tar fvxz gfortran-4.8.2-darwin13.tar.bz2 -C /\r\n```\r\n\r\nbefore installing the package through `devtools`.\r\n\r\n### Binary versions\r\n\r\nFor the case of windows and mac users, they can find binary versions of the package [here](https://github.com/USCCANA/netdiffuseR/releases), netdiffuseR\\_1...zip, and netdiffuseR\\_1...tgz respectively. They can install this directly as follows (using the 1.16.3.29 version):\r\n\r\n1.  Install dependencies from CRAN\r\n\r\n    ``` r\r\n    > install.packages(c(\"igraph\", \"Matrix\", \"SparseM\", \"RcppArmadillo\", \"sna\"), dependencies=TRUE)\r\n    ```\r\n\r\n2.  Download the binary version and install it as follows:\r\n\r\n    ``` r\r\n    > install.packages(\"netdiffuseR_1.16.3.29.zip\", repos=NULL)\r\n    ```\r\n\r\n    For windows users, and for Mac users:\r\n\r\n    ``` r\r\n    > install.packages(\"netdiffuseR_1.16.3.29.tgz\", repos=NULL)\r\n    ```\r\n\r\nExamples\r\n--------\r\n\r\nThis example has been taken from the package's vignettes:\r\n\r\n``` r\r\nlibrary(netdiffuseR)\r\n```\r\n\r\n    ## \r\n    ## Attaching package: 'netdiffuseR'\r\n\r\n    ## The following object is masked from 'package:base':\r\n    ## \r\n    ##     %*%\r\n\r\n### Infectiousness and Susceptibility\r\n\r\n``` r\r\n# Generating a random graph\r\nset.seed(1234)\r\nn <- 100\r\nnper <- 20\r\ngraph <- rgraph_er(n, nper, .5)\r\ntoa <- sample(c(1:(1+nper-1), NA), n, TRUE)\r\nhead(toa)\r\n```\r\n\r\n    ## [1] 20  7  9  1 17 14\r\n\r\n``` r\r\n# Creating a diffnet object\r\ndiffnet <- as_diffnet(graph, toa)\r\ndiffnet\r\n```\r\n\r\n    ## Dynamic network of class -diffnet-\r\n    ##  # of nodes         : 100 (1, 2, 3, 4, 5, 6, 7, 8, ...)\r\n    ##  # of time periods  : 20 (1 - 20)\r\n    ##  Type               : directed\r\n    ##  Final prevalence   : 0.95\r\n    ##  Static attributes  : -\r\n    ##  Dynamic attributes : -\r\n\r\n``` r\r\nsummary(diffnet)\r\n```\r\n\r\n    ## Diffusion network summary statistics\r\n    ## -----------------------------------------------------------------------\r\n    ##  Period  Adopters Cum Adopt. Cum Adopt. % Hazard Rate Density Moran's I \r\n    ## -------- -------- ---------- ------------ ----------- ------- --------- \r\n    ##        1        3          3         0.03           -    0.50     -0.01 \r\n    ##        2        8         11         0.11        0.08    0.50     -0.01 \r\n    ##        3        4         15         0.15        0.04    0.51     -0.00 \r\n    ##        4        1         16         0.16        0.01    0.49     -0.01 \r\n    ##        5        2         18         0.18        0.02    0.50     -0.01 \r\n    ##        6        5         23         0.23        0.06    0.50     -0.01 \r\n    ##        7        6         29         0.29        0.08    0.51     -0.01 \r\n    ##        8        1         30         0.30        0.01    0.50     -0.01 \r\n    ##        9        6         36         0.36        0.09    0.50     -0.01 \r\n    ##       10        5         41         0.41        0.08    0.49     -0.01 \r\n    ##       11        2         43         0.43        0.03    0.50     -0.02 \r\n    ##       12        6         49         0.49        0.11    0.50     -0.01 \r\n    ##       13        4         53         0.53        0.08    0.50     -0.01 \r\n    ##       14        7         60         0.60        0.15    0.50     -0.01 \r\n    ##       15        7         67         0.67        0.17    0.50     -0.01 \r\n    ##       16        3         70         0.70        0.09    0.50     -0.01 \r\n    ##       17       10         80         0.80        0.33    0.49     -0.01 \r\n    ##       18        4         84         0.84        0.20    0.50     -0.01 \r\n    ##       19        2         86         0.86        0.12    0.50     -0.01 \r\n    ##       20        9         95         0.95        0.64    0.50     -0.01 \r\n    ## -----------------------------------------------------------------------\r\n    ##  Left censoring  : 0.03 (3)\r\n    ##  Right centoring : 0.05 (5)\r\n    ##  # of nodes      : 100\r\n\r\n``` r\r\n# Visualizing distribution of suscep/infect\r\nout <- plot_infectsuscep(diffnet, bins = 20,K=5, logscale = FALSE, h=.01)\r\n```\r\n\r\n![](README_files/figure-markdown_github/plot_infectsuscept-1.png)\r\n\r\n``` r\r\nout <- plot_infectsuscep(diffnet, bins = 20,K=5, logscale = TRUE,\r\n                         exclude.zeros = TRUE, h=1,\r\n                         color.palette = colorRampPalette(c(\"lightblue\", \"yellow\", \"red\")))\r\n```\r\n\r\n    ## Warning in plot_infectsuscep.list(graph$graph, graph$toa, t0, normalize, :\r\n    ## When applying logscale some observations are missing.\r\n\r\n![](README_files/figure-markdown_github/plot_infectsuscept-2.png)\r\n\r\n### Threshold\r\n\r\n``` r\r\n# Generating a random graph\r\nset.seed(123)\r\ndiffnet <- rdiffnet(500, 20,\r\n                    seed.nodes = \"random\",\r\n                    rgraph.args = list(m=3),\r\n                    threshold.dist = function(x) runif(1, .3, .7))\r\ndiffnet\r\n```\r\n\r\n    ## Dynamic network of class -diffnet-\r\n    ##  # of nodes         : 500 (1, 2, 3, 4, 5, 6, 7, 8, ...)\r\n    ##  # of time periods  : 20 (1 - 20)\r\n    ##  Type               : directed\r\n    ##  Final prevalence   : 0.58\r\n    ##  Static attributes  : real_threshold (1)\r\n    ##  Dynamic attributes : -\r\n\r\n``` r\r\n# Threshold with fixed vertex size\r\nplot_threshold(diffnet, vertex.cex = .4)\r\n```\r\n\r\n![](README_files/figure-markdown_github/BoringThreshold,%20plot_threshold-1.png)\r\n\r\nUsing more features\r\n\r\n``` r\r\ndata(\"medInnovationsDiffNet\")\r\nsize <- sqrt(1 + dgr(medInnovationsDiffNet)[,1])\r\nset.seed(131)\r\nplot_threshold(\r\n  medInnovationsDiffNet,\r\n  vertex.label   = nodes(medInnovationsDiffNet),\r\n  vertex.cex     = size/10, vertex.lab.pos = NULL,\r\n  vertex.lab.cex = size/4,\r\n  vertex.sides   = medInnovationsDiffNet[[\"city\"]] + 2,\r\n  sub = \"Note: Vertices' sizes and shapes given by degree and city respectively\",\r\n  jitter.factor = c(1,1), jitter.amount = c(.25,.025)\r\n)\r\n```\r\n\r\n![](README_files/figure-markdown_github/NiceThreshold-1.png)\r\n\r\n### Adoption rate\r\n\r\n``` r\r\nplot_adopters(diffnet)\r\n```\r\n\r\n![](README_files/figure-markdown_github/Adopters-1.png)\r\n\r\n### Hazard rate\r\n\r\n``` r\r\nhazard_rate(diffnet)\r\n```\r\n\r\n![](README_files/figure-markdown_github/Hazard-1.png)\r\n\r\n### Diffusion process\r\n\r\n``` r\r\nplot_diffnet(medInnovationsDiffNet, slices=c(1,9,8))\r\n```\r\n\r\n![](README_files/figure-markdown_github/plot_diffnet-1.png)\r\n\r\n``` r\r\ndiffnet.toa(brfarmersDiffNet)[brfarmersDiffNet$toa >= 1965] <- NA\r\nplot_diffnet2(brfarmersDiffNet,\r\n              vertex.size = dgr(brfarmersDiffNet)[,3])\r\n```\r\n\r\n![](README_files/figure-markdown_github/plot_diffnet2-1.png)\r\n\r\n``` r\r\nset.seed(1133)\r\nx <- rdiffnet(2e3, 10, seed.graph = 'small-world')\r\nplot_diffnet2(x, vertex.size = dgr(x)[,nslices(x)], add.map = \"last\",\r\n              diffmap.args = list(kde2d.args=list(n=100, h=c(10,10))))\r\n```\r\n\r\n![](README_files/figure-markdown_github/plot_diffnet2%20with%20map-1.png)\r\n\r\n### Adopters classification\r\n\r\n``` r\r\nout <- classify(kfamilyDiffNet, include_censored = TRUE, addNA=FALSE)\r\nftable(out)\r\n```\r\n\r\n    ##                thr Very Low Thresh. Low Thresh. High Thresh. Very High Thresh.    NA\r\n    ## toa                                                                                 \r\n    ## Early Adopters                14.04        8.40         0.57              0.29  0.00\r\n    ## Early Majority                 5.64       11.65         5.54              2.58  0.00\r\n    ## Late Majority                  1.34        5.06         6.21              2.96  0.00\r\n    ## Laggards                       1.53        0.00         0.00             34.19  0.00\r\n    ## NA                             0.00        0.00         0.00              0.00  0.00\r\n\r\n``` r\r\n# Computing color\r\nage <- kfamilyDiffNet[[\"age\"]]\r\nage[age==0] <- mean(age)\r\n\r\n# Mean by class\r\ncl  <- as.data.frame(out)\r\nMeans <- with(out, matrix(0, 4, 4,\r\n                        dimnames = list(levels(toa), levels(thr))))\r\nfor (l in levels(out$toa))\r\n  for (h in levels(out$thr))\r\n    Means[l,h] <- mean(age[cl$toa==l & cl$thr==h], na.rm = TRUE)\r\n\r\n# Color palette\r\nCol <- Means\r\nCol[] <- (Means - min(Means, na.rm = TRUE))/\r\n  (max(Means, na.rm = TRUE) - min(Means, na.rm = TRUE))\r\nCol[is.nan(Col)] <- mean(Col, na.rm = TRUE)\r\nCol[] <- rgb(colorRamp(blues9)(Col), maxColorValue = 255)\r\n\r\n# Plotting and adding key\r\nlevels(out$toa) <-\r\n  sapply(strsplit(levels(out$toa), \" \"), paste, collapse=\"\\n             \")\r\nplot(out, color=Col, las = 2, xlab=\"Time of Adoption\",\r\n     ylab=\"Threshold\", main=\"\", ftable.args=list(addNA=FALSE))\r\n\r\ndrawColorKey(Means, nlevels = 50, border=\"transparent\",\r\n             main=\"Age\",\r\n             color.palette = colorRampPalette(blues9)(50),\r\n             key.pos = c(.8,.90,.1,.6)\r\n             )\r\n```\r\n\r\n![](README_files/figure-markdown_github/mosaic-1.png)\r\n\r\n### Session info\r\n\r\n``` r\r\nsessionInfo()\r\n```\r\n\r\n    ## R version 3.3.0 (2016-05-03)\r\n    ## Platform: x86_64-pc-linux-gnu (64-bit)\r\n    ## Running under: Ubuntu 14.04.4 LTS\r\n    ## \r\n    ## locale:\r\n    ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \r\n    ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \r\n    ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \r\n    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \r\n    ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \r\n    ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \r\n    ## \r\n    ## attached base packages:\r\n    ## [1] stats     graphics  grDevices utils     datasets  methods   base     \r\n    ## \r\n    ## other attached packages:\r\n    ## [1] SparseM_1.7        netdiffuseR_1.16.6\r\n    ## \r\n    ## loaded via a namespace (and not attached):\r\n    ##  [1] Rcpp_0.12.5     lattice_0.20-33 digest_0.6.9    MASS_7.3-45    \r\n    ##  [5] grid_3.3.0      formatR_1.4     magrittr_1.5    evaluate_0.9   \r\n    ##  [9] stringi_1.1.1   Matrix_1.2-6    sna_2.3-2       boot_1.3-18    \r\n    ## [13] rmarkdown_0.9.6 tools_3.3.0     stringr_1.0.0   igraph_1.0.1   \r\n    ## [17] yaml_2.1.13     htmltools_0.3.5 knitr_1.13\r\n\r\nTo-do list\r\n----------\r\n\r\n-   Import/Export functions for interfacing other package's clases, in particular: `statnet` set (specially the packages `networkDynamic` and `ndtv`), ~~`igraph`~~ and `Rsiena`.\r\n-   Populate the tests folder.\r\n-   ~~Use spells? (`select_egoalter` would use this)~~\r\n-   Classify individuals by adoption category using early adopters, adopters, and laggards, and by threshold using very low, low, high and very high threshold (Valente 95' p. 94).\r\n-   ~~Double check all functions using adjacency matrix values.~~\r\n-   Remove dimnames from matrices and vectors. It is more efficient to use the ones stored in meta instead.\r\n-   Implement the Bass model\r\n-   ~~Include function to import survey data (as shown on the vignettes)~~\r\n-   Exposure based on Mahalanobis distances and also Roger Leenders on weighting exposure (internal note).\r\n-   -   \\[2016-04-04\\]: Add more options to `exposure`, namely, `self` (so removes diagonal or not!).\r\n-\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}